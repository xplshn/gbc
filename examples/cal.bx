extrn printf;

type struct tm {
    sec,
    min,
    hour,
    mday,
    mon,
    year,
    wday,
    yday,
    isdst int32; // localtime is extrn, it   comes   from the  Musl libc
};               // and `tm`  is the    same struct  as   the  one  there
                 // :3

// Typed external function declarations
int extrn time;
tm* extrn localtime;

int32 days2Month(m int, y int) {
    if (m == 1) { // feb
        if ((y % 400 == 0) | ((y % 4 == 0) & (y % 100 != 0))) {
            return (29);
        } else {
            return (28);
        }
    };
    if ((m == 0) | (m == 2) | (m == 4) | (m == 6) | (m == 7) | (m == 9) | (m == 11)) {
        return (31);
    };
    return (30);
}

int main() {
    now := time(0);
    tptr := localtime(&now);
    tm := *tptr;

    year  := tm.year + 1900;
    month := tm.mon;
    today := tm.mday;
    wday  := tm.wday;

    days := days2Month(month, year);

    printf("    %d/%d\n", month + 1, year);
    printf("Su Mo Tu We Th Fr Sa\n");

    // Calculate the weekday of the first day of the month
    first_wday := (wday - (today - 1) % 7 + 7) % 7;

    i := 0;
    while (i < first_wday) {
        printf("   ");
        i = i + 1;
    };

    d := 1;
    while (d <= days) {
        if (d == today) {
            printf("\033[31m%2d\033[0m ", d);
        } else {
            printf("%2d ", d);
        };

        current_wday := (first_wday + d - 1) % 7;
        if (current_wday == 6) { // It's Saturday, print \n
            printf("\n");
        };
        d = d + 1;
    };

    // Month doesn't end in Saturday so add \n
    if ((first_wday + days - 1) % 7 != 6) {
        printf("\n");
    };

    return (0);
}

