extrn printf;

puts(arg string){
    printf("%s\n", arg);
}

// TODO: Copilot: Make this yield an error: Tried to assign to undeclared identifier. Did you intend to use := ?
// global_short_aaa = 10;  // Commented out - this is expected to be an error case

global_short := 10;

auto global_auto := 20;

auto global_multi_1, global_multi_2 := 30, 40;

main() {
    auto local_auto;
    local_auto = 50;

    // Test short declaration
    local_short := 60;

    // Test multi-short declaration
    local_multi_short_1, local_multi_short_2 := 70, 80;

    if (global_short != 10) {
        puts("FAIL: global_short");
        return (1);
    }
    if (global_auto != 20) {
        puts("FAIL: global_auto");
        return (1);
    }
    if (global_multi_1 != 30 || global_multi_2 != 40) {
        puts("FAIL: global_multi");
        return (1);
    }
    if (local_auto != 50) {
        puts("FAIL: local_auto");
        return (1);
    }
    if (local_short != 60) {
        puts("FAIL: local_short");
        return (1);
    }
    if (local_multi_short_1 != 70 || local_multi_short_2 != 80) {
        puts("FAIL: local_multi_short");
        return (1);
    }

    puts("PASS: All Bx declaration syntax seems to work.\n");
    return (0);
}
